{"ast":null,"code":"import { defaultusers } from 'src/assets/defaultusers';\nimport * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {\n    this.users = [];\n  }\n  getUsers() {\n    return this.users;\n  }\n  setUsers() {\n    this.users = defaultusers;\n  }\n  deleteUser(id) {\n    this.users = this.users.filter(user => user.userId !== id);\n  }\n  findUserById(id) {\n    return this.users.find(user => user.userId === Number(id));\n  }\n  findUserByUsername(username) {\n    return this.users.find(user => user.username === username);\n  }\n  findUserByEmail(email) {\n    return this.users.find(user => user.email === email);\n  }\n  userCount() {\n    return this.users.length;\n  }\n  editUser(editedUser, id) {\n    this.users = this.users.map(user => {\n      if (user.userId === id) user = editedUser;\n      return user;\n    });\n  }\n  addUser(user) {\n    user.userId = this.users[this.userCount];\n    this.users.push(user);\n  }\n  checkUnique(username, email, id) {\n    if (this.users.find(user => user.username === username.toLowerCase()) !== undefined && this.findUserByUsername(username.toLowerCase()).userId !== id) {\n      return false;\n    } else if (this.users.find(user => user.email === email.toLowerCase()) !== undefined && this.findUserByEmail(email.toLowerCase()).userId !== id) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)();\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["defaultusers","UserService","constructor","users","getUsers","setUsers","deleteUser","id","filter","user","userId","findUserById","find","Number","findUserByUsername","username","findUserByEmail","email","userCount","length","editUser","editedUser","map","addUser","push","checkUnique","toLowerCase","undefined","factory","ɵfac","providedIn"],"sources":["C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { defaultusers } from 'src/assets/defaultusers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private users: User[] = [];\n  constructor() {}\n  getUsers(): User[] {\n    return this.users;\n  }\n\n  setUsers(): void {\n    this.users = defaultusers;\n  }\n\n  deleteUser(id: number): void {\n    this.users = this.users.filter((user) => user.userId !== id);\n  }\n\n  findUserById(id: number): User | undefined {\n    return this.users.find((user) => user.userId === Number(id));\n  }\n\n  findUserByUsername(username: string): User | undefined {\n    return this.users.find((user) => user.username === username);\n  }\n\n  findUserByEmail(email: string): User | undefined {\n    return this.users.find((user) => user.email === email);\n  }\n\n  userCount():number {\n    return this.users.length;\n  }\n\n  editUser(editedUser: User, id: number): void {\n    this.users = this.users.map((user) => {\n      if (user.userId === id) user = editedUser;\n      return user;\n    });\n  }\n  addUser(user: User): void {\n    user.userId = this.users[this.userCount]\n    this.users.push(user);\n  }\n\n  checkUnique(username: string, email: string, id: number): boolean {\n    if (\n      this.users.find((user) => user.username === username.toLowerCase()) !==\n        undefined &&\n      this.findUserByUsername(username.toLowerCase())!.userId !== id\n    ) {\n      return false;\n    } else if (\n      this.users.find((user) => user.email === email.toLowerCase()) !==\n      undefined &&\n      this.findUserByEmail(email.toLowerCase())!.userId !== id\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n"],"mappings":"AAEA,SAASA,YAAY,QAAQ,yBAAyB;;AAKtD,OAAM,MAAOC,WAAW;EAEtBC,YAAA;IADQ,KAAAC,KAAK,GAAW,EAAE;EACX;EACfC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACD,KAAK;EACnB;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,GAAGH,YAAY;EAC3B;EAEAM,UAAUA,CAACC,EAAU;IACnB,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACA,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKH,EAAE,CAAC;EAC9D;EAEAI,YAAYA,CAACJ,EAAU;IACrB,OAAO,IAAI,CAACJ,KAAK,CAACS,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKG,MAAM,CAACN,EAAE,CAAC,CAAC;EAC9D;EAEAO,kBAAkBA,CAACC,QAAgB;IACjC,OAAO,IAAI,CAACZ,KAAK,CAACS,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACM,QAAQ,KAAKA,QAAQ,CAAC;EAC9D;EAEAC,eAAeA,CAACC,KAAa;IAC3B,OAAO,IAAI,CAACd,KAAK,CAACS,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACQ,KAAK,KAAKA,KAAK,CAAC;EACxD;EAEAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACf,KAAK,CAACgB,MAAM;EAC1B;EAEAC,QAAQA,CAACC,UAAgB,EAAEd,EAAU;IACnC,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACA,KAAK,CAACmB,GAAG,CAAEb,IAAI,IAAI;MACnC,IAAIA,IAAI,CAACC,MAAM,KAAKH,EAAE,EAAEE,IAAI,GAAGY,UAAU;MACzC,OAAOZ,IAAI;IACb,CAAC,CAAC;EACJ;EACAc,OAAOA,CAACd,IAAU;IAChBA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACP,KAAK,CAAC,IAAI,CAACe,SAAS,CAAC;IACxC,IAAI,CAACf,KAAK,CAACqB,IAAI,CAACf,IAAI,CAAC;EACvB;EAEAgB,WAAWA,CAACV,QAAgB,EAAEE,KAAa,EAAEV,EAAU;IACrD,IACE,IAAI,CAACJ,KAAK,CAACS,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACM,QAAQ,KAAKA,QAAQ,CAACW,WAAW,EAAE,CAAC,KACjEC,SAAS,IACX,IAAI,CAACb,kBAAkB,CAACC,QAAQ,CAACW,WAAW,EAAE,CAAE,CAAChB,MAAM,KAAKH,EAAE,EAC9D;MACA,OAAO,KAAK;KACb,MAAM,IACL,IAAI,CAACJ,KAAK,CAACS,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACQ,KAAK,KAAKA,KAAK,CAACS,WAAW,EAAE,CAAC,KAC7DC,SAAS,IACT,IAAI,CAACX,eAAe,CAACC,KAAK,CAACS,WAAW,EAAE,CAAE,CAAChB,MAAM,KAAKH,EAAE,EACxD;MACA,OAAO,KAAK;KACb,MAAM;MACL,OAAO,IAAI;;EAEf;;AA1DWN,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { defaultcategories } from 'src/assets/defaultcategories';\nimport * as i0 from \"@angular/core\";\nexport class CategoryService {\n  constructor() {\n    this.categories = [];\n  }\n  getCategories() {\n    return this.categories;\n  }\n  setCategories() {\n    this.categories = defaultcategories;\n  }\n  deleteCategory($event) {\n    this.categories = this.categories.filter(category => category.categoryId !== $event);\n  }\n  getCategoryById(id) {\n    return this.categories.find(category => category.categoryId === id);\n  }\n  updatedCategory(updatedCategory) {\n    this.categories = this.categories.map(category => {\n      if (category.categoryId === updatedCategory.categoryId) {\n        category = updatedCategory;\n      }\n      return category;\n    });\n  }\n  addCategory(newName, newDate) {\n    const newCategory = {\n      categoryId: this.getCategories()[this.getCategories().length - 1].categoryId + 1,\n      name: newName,\n      creationDate: newDate\n    };\n    this.categories.push(newCategory);\n  }\n  checkUniqueName() {}\n}\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)();\n};\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["defaultcategories","CategoryService","constructor","categories","getCategories","setCategories","deleteCategory","$event","filter","category","categoryId","getCategoryById","id","find","updatedCategory","map","addCategory","newName","newDate","newCategory","length","name","creationDate","push","checkUniqueName","factory","ɵfac","providedIn"],"sources":["C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\category\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Category } from './category';\nimport { defaultcategories } from 'src/assets/defaultcategories';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\nprivate categories: Category[] = [];\n\n  constructor() { }\n\n  getCategories(): Category[]{\n    return this.categories;\n  }\n\n  setCategories(): void {\n    this.categories = defaultcategories;\n  }\n\n  deleteCategory($event: number){\n    this.categories = this.categories.filter(category => category.categoryId !== $event);\n  }\n\n  getCategoryById(id: number): Category | undefined {\n    return this.categories.find((category) => category.categoryId === id);\n  }\n\n  updatedCategory(updatedCategory: Category){\n    this.categories = this.categories.map(category => {\n      if(category.categoryId === updatedCategory.categoryId){\n        category = updatedCategory;\n      }\n      return category;\n    })\n  }\n\n  addCategory(newName: string, newDate: string){\n    const newCategory: Category = {\ncategoryId: this.getCategories()[this.getCategories().length - 1].categoryId + 1;\nname: newName,\ncreationDate: newDate\n  }\n  this.categories.push(newCategory);\n  }\n\n  checkUniqueName(){\n    \n  }\n}\n"],"mappings":"AAEA,SAASA,iBAAiB,QAAQ,8BAA8B;;AAKhE,OAAM,MAAOC,eAAe;EAG1BC,YAAA;IAFM,KAAAC,UAAU,GAAe,EAAE;EAEjB;EAEhBC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,UAAU;EACxB;EAEAE,aAAaA,CAAA;IACX,IAAI,CAACF,UAAU,GAAGH,iBAAiB;EACrC;EAEAM,cAAcA,CAACC,MAAc;IAC3B,IAAI,CAACJ,UAAU,GAAG,IAAI,CAACA,UAAU,CAACK,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,UAAU,KAAKH,MAAM,CAAC;EACtF;EAEAI,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACT,UAAU,CAACU,IAAI,CAAEJ,QAAQ,IAAKA,QAAQ,CAACC,UAAU,KAAKE,EAAE,CAAC;EACvE;EAEAE,eAAeA,CAACA,eAAyB;IACvC,IAAI,CAACX,UAAU,GAAG,IAAI,CAACA,UAAU,CAACY,GAAG,CAACN,QAAQ,IAAG;MAC/C,IAAGA,QAAQ,CAACC,UAAU,KAAKI,eAAe,CAACJ,UAAU,EAAC;QACpDD,QAAQ,GAAGK,eAAe;;MAE5B,OAAOL,QAAQ;IACjB,CAAC,CAAC;EACJ;EAEAO,WAAWA,CAACC,OAAe,EAAEC,OAAe;IAC1C,MAAMC,WAAW,GAAa;MAClCT,UAAU,EAAE,IAAI,CAACN,aAAa,EAAE,CAAC,IAAI,CAACA,aAAa,EAAE,CAACgB,MAAM,GAAG,CAAC,CAAC,CAACV,UAAU,GAAG,CAAC;MAChFW,IAAI,EAAEJ,OAAO;MACbK,YAAY,EAAEJ;KACX;IACD,IAAI,CAACf,UAAU,CAACoB,IAAI,CAACJ,WAAW,CAAC;EACjC;EAEAK,eAAeA,CAAA,GAEf;;AAzCWvB,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;SAAfA,eAAe;EAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { defaultcategories } from 'src/assets/defaultcategories';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../posts/post.service\";\nexport class CategoryService {\n  constructor(postService) {\n    this.postService = postService;\n    this.categories = [];\n  }\n  getCategories() {\n    return this.categories;\n  }\n  setCategories() {\n    this.categories = defaultcategories;\n  }\n  deleteCategory($event) {\n    if (this.postService.getPosts()) if (this.postService.getPosts().filter(post => post.categoryId === $event).length > 0) alert('You cannor delete a category with posts attached.');else this.categories = this.categories.filter(category => category.categoryId !== $event);\n  }\n  getCategoryById(id) {\n    return this.categories.find(category => category.categoryId === id);\n  }\n  updatedCategory(updatedCategory) {\n    this.categories = this.categories.map(category => {\n      if (category.categoryId === updatedCategory.categoryId) {\n        category = updatedCategory;\n      }\n      return category;\n    });\n  }\n  addCategory(newName, newDate) {\n    const newCategory = {\n      categoryId: this.getCategories()[this.getCategories().length - 1].categoryId + 1,\n      name: newName,\n      creationDate: newDate\n    };\n    if (this.checkUniqueCategory(newCategory.name, newCategory.categoryId) === true) this.categories.push(newCategory);else alert('This category already exists.');\n  }\n  findCategoryByName(name) {\n    return this.categories.find(category => category.name === name);\n  }\n  checkUniqueCategory(name, id) {\n    if (this.categories.find(category => category.name === name.toLowerCase()) !== undefined && this.findCategoryByName(name.toLowerCase()).categoryId !== id) return false;else return true;\n  }\n}\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.PostService));\n};\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["defaultcategories","CategoryService","constructor","postService","categories","getCategories","setCategories","deleteCategory","$event","getPosts","filter","post","categoryId","length","alert","category","getCategoryById","id","find","updatedCategory","map","addCategory","newName","newDate","newCategory","name","creationDate","checkUniqueCategory","push","findCategoryByName","toLowerCase","undefined","i0","ɵɵinject","i1","PostService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\category\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Category } from './category';\nimport { defaultcategories } from 'src/assets/defaultcategories';\nimport { PostService } from '../posts/post.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  private categories: Category[] = [];\n\n  constructor(private postService: PostService) {}\n\n  getCategories(): Category[] {\n    return this.categories;\n  }\n\n  setCategories(): void {\n    this.categories = defaultcategories;\n  }\n\n  deleteCategory($event: number) {\n    if(this.postService.getPosts())\n    if (\n      this.postService\n        .getPosts()\n        .filter((post) => post.categoryId === $event).length > 0)\n      alert('You cannor delete a category with posts attached.');\n    else\n      this.categories = this.categories.filter(\n        (category) => category.categoryId !== $event\n      );\n  }\n\n  getCategoryById(id: number): Category | undefined {\n    return this.categories.find((category) => category.categoryId === id);\n  }\n\n  updatedCategory(updatedCategory: Category) {\n    this.categories = this.categories.map((category) => {\n      if (category.categoryId === updatedCategory.categoryId) {\n        category = updatedCategory;\n      }\n      return category;\n    });\n  }\n\n  addCategory(newName: string, newDate: string) {\n    const newCategory: Category = {\n      categoryId:\n        this.getCategories()[this.getCategories().length - 1].categoryId + 1,\n      name: newName,\n      creationDate: newDate,\n    };\n    if (\n      this.checkUniqueCategory(newCategory.name, newCategory.categoryId) ===\n      true\n    )\n      this.categories.push(newCategory);\n    else alert('This category already exists.');\n  }\n\n  findCategoryByName(name: string) {\n    return this.categories.find((category) => category.name === name);\n  }\n\n  checkUniqueCategory(name: string, id: number): boolean {\n    if (\n      this.categories.find(\n        (category) => category.name === name.toLowerCase()\n      ) !== undefined &&\n      this.findCategoryByName(name.toLowerCase())!.categoryId !== id\n    )\n      return false;\n    else return true;\n  }\n}\n"],"mappings":"AAEA,SAASA,iBAAiB,QAAQ,8BAA8B;;;AAMhE,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAFvB,KAAAC,UAAU,GAAe,EAAE;EAEY;EAE/CC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,UAAU;EACxB;EAEAE,aAAaA,CAAA;IACX,IAAI,CAACF,UAAU,GAAGJ,iBAAiB;EACrC;EAEAO,cAAcA,CAACC,MAAc;IAC3B,IAAG,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE,EAC9B,IACE,IAAI,CAACN,WAAW,CACbM,QAAQ,EAAE,CACVC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,UAAU,KAAKJ,MAAM,CAAC,CAACK,MAAM,GAAG,CAAC,EAC1DC,KAAK,CAAC,mDAAmD,CAAC,CAAC,KAE3D,IAAI,CAACV,UAAU,GAAG,IAAI,CAACA,UAAU,CAACM,MAAM,CACrCK,QAAQ,IAAKA,QAAQ,CAACH,UAAU,KAAKJ,MAAM,CAC7C;EACL;EAEAQ,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACb,UAAU,CAACc,IAAI,CAAEH,QAAQ,IAAKA,QAAQ,CAACH,UAAU,KAAKK,EAAE,CAAC;EACvE;EAEAE,eAAeA,CAACA,eAAyB;IACvC,IAAI,CAACf,UAAU,GAAG,IAAI,CAACA,UAAU,CAACgB,GAAG,CAAEL,QAAQ,IAAI;MACjD,IAAIA,QAAQ,CAACH,UAAU,KAAKO,eAAe,CAACP,UAAU,EAAE;QACtDG,QAAQ,GAAGI,eAAe;;MAE5B,OAAOJ,QAAQ;IACjB,CAAC,CAAC;EACJ;EAEAM,WAAWA,CAACC,OAAe,EAAEC,OAAe;IAC1C,MAAMC,WAAW,GAAa;MAC5BZ,UAAU,EACR,IAAI,CAACP,aAAa,EAAE,CAAC,IAAI,CAACA,aAAa,EAAE,CAACQ,MAAM,GAAG,CAAC,CAAC,CAACD,UAAU,GAAG,CAAC;MACtEa,IAAI,EAAEH,OAAO;MACbI,YAAY,EAAEH;KACf;IACD,IACE,IAAI,CAACI,mBAAmB,CAACH,WAAW,CAACC,IAAI,EAAED,WAAW,CAACZ,UAAU,CAAC,KAClE,IAAI,EAEJ,IAAI,CAACR,UAAU,CAACwB,IAAI,CAACJ,WAAW,CAAC,CAAC,KAC/BV,KAAK,CAAC,+BAA+B,CAAC;EAC7C;EAEAe,kBAAkBA,CAACJ,IAAY;IAC7B,OAAO,IAAI,CAACrB,UAAU,CAACc,IAAI,CAAEH,QAAQ,IAAKA,QAAQ,CAACU,IAAI,KAAKA,IAAI,CAAC;EACnE;EAEAE,mBAAmBA,CAACF,IAAY,EAAER,EAAU;IAC1C,IACE,IAAI,CAACb,UAAU,CAACc,IAAI,CACjBH,QAAQ,IAAKA,QAAQ,CAACU,IAAI,KAAKA,IAAI,CAACK,WAAW,EAAE,CACnD,KAAKC,SAAS,IACf,IAAI,CAACF,kBAAkB,CAACJ,IAAI,CAACK,WAAW,EAAE,CAAE,CAAClB,UAAU,KAAKK,EAAE,EAE9D,OAAO,KAAK,CAAC,KACV,OAAO,IAAI;EAClB;;AAnEWhB,eAAe,C;mBAAfA,eAAe,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAflC,eAAe,C;SAAfA,eAAe;EAAAmC,OAAA,EAAfnC,eAAe,CAAAoC,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
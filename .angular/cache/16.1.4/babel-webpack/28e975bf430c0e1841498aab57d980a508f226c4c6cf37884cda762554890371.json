{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { defaultcomments } from 'src/assets/defaultcomments';\nimport { EntityCollectionServiceBase } from '@ngrx/data';\nimport * as i0 from \"@angular/core\";\nexport class CommentService {\n  constructor() {\n    this.comments = [];\n  }\n  getComments() {\n    return this.comments;\n  }\n  setComments() {\n    this.comments = defaultcomments;\n  }\n}\nCommentService.ɵfac = function CommentService_Factory(t) {\n  return new (t || CommentService)();\n};\nCommentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentService,\n  factory: CommentService.ɵfac,\n  providedIn: 'root'\n});\nexport let ModelService = class ModelService extends EntityCollectionServiceBase {\n  constructor(serviceElementsFactory) {\n    super('Model', serviceElementsFactory);\n  }\n};\nModelService = __decorate([Injectable({\n  providedIn: 'root'\n})], ModelService);","map":{"version":3,"names":["Injectable","defaultcomments","EntityCollectionServiceBase","CommentService","constructor","comments","getComments","setComments","factory","ɵfac","providedIn","ModelService","serviceElementsFactory","__decorate"],"sources":["C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\comments\\comment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Comment } from './comment';\nimport { defaultcomments } from 'src/assets/defaultcomments';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\nprivate comments: Comment[] = [];\n  constructor() { }\n\n  getComments(): Comment[] {\n    return this.comments;\n  }\n\n  setComments(): void {\n  this.comments = defaultcomments;\n}\n\nimport { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory\n} from '@ngrx/data';\nimport { Model } from '../core';\n\n@Injectable({ providedIn: 'root' })\nexport class ModelService extends EntityCollectionServiceBase<Model> {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('Model', serviceElementsFactory);\n  }\n}\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,eAAe,QAAQ,4BAA4B;AAkB5D,SACEC,2BAA2B,QAEtB,YAAY;;AAhBnB,OAAM,MAAOC,cAAc;EAEzBC,YAAA;IADM,KAAAC,QAAQ,GAAc,EAAE;EACd;EAEhBC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,QAAQ;EACtB;EAEAE,WAAWA,CAAA;IACX,IAAI,CAACF,QAAQ,GAAGJ,eAAe;EACjC;;AAVaE,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAK,OAAA,EAAdL,cAAc,CAAAM,IAAA;EAAAC,UAAA,EAFb;AAAM;AAsBb,WAAMC,YAAY,GAAlB,MAAMA,YAAa,SAAQT,2BAAkC;EAClEE,YAAYQ,sBAA8D;IACxE,KAAK,CAAC,OAAO,EAAEA,sBAAsB,CAAC;EACxC;CACD;AAJYD,YAAY,GAAAE,UAAA,EADxBb,UAAU,CAAC;EAAEU,UAAU,EAAE;AAAM,CAAE,CAAC,C,EACtBC,YAAY,CAIxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UserAddComponent = class UserAddComponent {\n  constructor(userService, pri) {\n    this.userService = userService;\n    //Form icerisinde kullanilmak uzere yeni bir use objesi olusturuldu\n    this.user = {\n      userId: 0,\n      username: '',\n      email: '',\n      creationDate: '',\n      isActive: false\n    };\n    this.userService.setUsers();\n  }\n  /* userService componentinden veri once setUsers fonksiyonu kullanarak verileri cekiyoruz, daha sonra getUsers kullanarak userCount fonsksiyonu ile son userId yi bularak yeni userId numarasi olusturuyoruz */\n  handleAddClick() {\n    this.user.userId = this.userService.getUsers()[this.userService.userCount() - 1].userId + 1;\n    this.userService.addUser(this.user);\n    console.log(this.userService.getUsers());\n  }\n  handleCancelClick() {}\n};\nUserAddComponent = __decorate([Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.css']\n})], UserAddComponent);","map":{"version":3,"names":["Component","UserAddComponent","constructor","userService","pri","user","userId","username","email","creationDate","isActive","setUsers","handleAddClick","getUsers","userCount","addUser","console","log","handleCancelClick","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\user\\user-add\\user-add.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from '../user';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.css'],\n})\nexport class UserAddComponent {\n\n  //Form icerisinde kullanilmak uzere yeni bir use objesi olusturuldu\n  \n  user: User = {\n    userId: 0,\n    username: '',\n    email: '',\n    creationDate: '',\n    isActive: false,\n  };\n\n  constructor(private userService: UserService, pri) {\n    this.userService.setUsers();\n  }\n\n/* userService componentinden veri once setUsers fonksiyonu kullanarak verileri cekiyoruz, daha sonra getUsers kullanarak userCount fonsksiyonu ile son userId yi bularak yeni userId numarasi olusturuyoruz */\n  handleAddClick() {\n  this.user.userId = this.userService.getUsers()[this.userService.userCount() - 1].userId + 1;\n    this.userService.addUser(this.user);\n    console.log(this.userService.getUsers());\n  }\n\n  handleCancelClick(){\n    \n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAY3BC,YAAoBC,WAAwB,EAAEC,GAAG;IAA7B,KAAAD,WAAW,GAAXA,WAAW;IAV/B;IAEA,KAAAE,IAAI,GAAS;MACXC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE;KACX;IAGC,IAAI,CAACP,WAAW,CAACQ,QAAQ,EAAE;EAC7B;EAEF;EACEC,cAAcA,CAAA;IACd,IAAI,CAACP,IAAI,CAACC,MAAM,GAAG,IAAI,CAACH,WAAW,CAACU,QAAQ,EAAE,CAAC,IAAI,CAACV,WAAW,CAACW,SAAS,EAAE,GAAG,CAAC,CAAC,CAACR,MAAM,GAAG,CAAC;IACzF,IAAI,CAACH,WAAW,CAACY,OAAO,CAAC,IAAI,CAACV,IAAI,CAAC;IACnCW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,WAAW,CAACU,QAAQ,EAAE,CAAC;EAC1C;EAEAK,iBAAiBA,CAAA,GAEjB;CACD;AA1BYjB,gBAAgB,GAAAkB,UAAA,EAL5BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWrB,gBAAgB,CA0B5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
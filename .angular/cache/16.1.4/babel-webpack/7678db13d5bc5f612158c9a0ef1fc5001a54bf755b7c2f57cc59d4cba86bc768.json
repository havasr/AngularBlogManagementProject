{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UserListComponent = class UserListComponent {\n  constructor(userService, postService, commentService) {\n    this.userService = userService;\n    this.postService = postService;\n    this.commentService = commentService;\n    this.users = [];\n    this.pagedData = [];\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    //forms kisminda yer alan degiskenler tanimlandi.\n    this.username = '';\n    this.email = '';\n    this.creationDate = '';\n    this.isActive = false;\n    this.editMode = false;\n    this.userId = 0;\n    if (this.userService.getUsers().length === 0) this.userService.setUsers();\n    this.users = this.userService.getUsers();\n    if (this.postService.getPosts().length === 0) this.postService.setPosts();\n    if (this.commentService.getComments().length === 0) this.commentService.setComments();\n  }\n  //son kullanici kalmasi durumu engellendi.\n  handleDeleteClick($event) {\n    if (this.userService.userCount() === 1) {\n      alert('You cannot delete the last user.');\n    } else if (this.checkPostsAndComments($event) === true) alert(\"You cannot delete users with posts or comments.\");else {\n      this.userService.deleteUser($event);\n      this.users = this.userService.getUsers();\n    }\n  }\n  checkPostsAndComments(id) {\n    if (this.postService.getPosts().filter(post => post.userId === id).length !== 0) return true;else if (this.commentService.getComments().filter(comment => comment.userId === id).length !== 0) return true;else return false;\n  }\n  handleSaveClick() {\n    if (this.username == '' || this.email == '' || this.creationDate == '') {\n      alert('Please fill in all sections.');\n    } else if (this.userService.checkUnique(this.username, this.email, this.userId) === false) {\n      alert('Username and email must be unique.');\n    } else {\n      const user = {\n        userId: this.userId,\n        username: this.username,\n        email: this.email,\n        creationDate: this.creationDate,\n        isActive: this.isActive\n      };\n      this.userService.editUser(user, this.userId);\n      this.users = this.userService.getUsers();\n      this.handleCancelClick();\n    }\n  }\n  handleEditClick($event) {\n    this.editMode = true;\n    this.userId = $event;\n  }\n  handleCancelClick() {\n    this.editMode = false;\n    this.username = '';\n    this.email = '';\n    this.creationDate = '';\n    this.userId = 0;\n  }\n  ngOnInit() {\n    this.pageChanged(this.currentPage);\n  }\n  pageChanged(page) {\n    const startIndex = (page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    this.pagedData = this.users.slice(startIndex, endIndex);\n    this.currentPage = page;\n    if (this.pagedData.length === 0 && this.currentPage > 1) {\n      this.previousPage();\n    }\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.pageChanged(this.currentPage);\n    }\n  }\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n      this.pageChanged(this.currentPage);\n    }\n  }\n  get totalPages() {\n    return Math.ceil(this.users.length / this.itemsPerPage);\n  }\n};\nUserListComponent = __decorate([Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})], UserListComponent);","map":{"version":3,"names":["Component","UserListComponent","constructor","userService","postService","commentService","users","pagedData","currentPage","itemsPerPage","username","email","creationDate","isActive","editMode","userId","getUsers","length","setUsers","getPosts","setPosts","getComments","setComments","handleDeleteClick","$event","userCount","alert","checkPostsAndComments","deleteUser","id","filter","post","comment","handleSaveClick","checkUnique","user","editUser","handleCancelClick","handleEditClick","ngOnInit","pageChanged","page","startIndex","endIndex","slice","previousPage","nextPage","totalPages","Math","ceil","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\user\\user-list\\user-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { PostService } from 'src/app/posts/post.service';\nimport { CommentService } from 'src/app/comments/comment.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n})\nexport class UserListComponent {\n  users: User[] = [];\n  pagedData: User[] = [];\n  currentPage = 1;\n  itemsPerPage = 10;\n\n  //forms kisminda yer alan degiskenler tanimlandi.\n  username: string = '';\n  email: string = '';\n  creationDate: string = '';\n  isActive: boolean = false;\n  editMode: boolean = false;\n  userId: number = 0;\n\n  constructor(\n    private userService: UserService,\n    private postService: PostService,\n    private commentService: CommentService\n  ) {\n    if (this.userService.getUsers().length === 0)\n      this.userService.setUsers();\n    this.users = this.userService.getUsers();\n    if (this.postService.getPosts().length === 0)\n      this.postService.setPosts();\n    if (this.commentService.getComments().length === 0)\n      this.commentService.setComments();\n  }\n\n  //son kullanici kalmasi durumu engellendi.\n  handleDeleteClick($event: number) {\n    if (this.userService.userCount() === 1) {\n      alert('You cannot delete the last user.');\n    } else if(this.checkPostsAndComments($event) === true)\n    alert(\"You cannot delete users with posts or comments.\");\n    else {\n      this.userService.deleteUser($event);\n      this.users = this.userService.getUsers();\n    }\n  }\n\n  checkPostsAndComments(id: number): boolean {\n    if (this.postService.getPosts().filter((post) => post.userId === id).length !== 0)\n      return true;\n    else if (this.commentService.getComments().filter((comment) => comment.userId === id).length !== 0)\n      return true;\n    else\n      return false;\n  }\n\n  \n  handleSaveClick() {\n    if (this.username == '' || this.email == '' || this.creationDate == '') {\n      alert('Please fill in all sections.');\n    } else if (\n      this.userService.checkUnique(this.username, this.email, this.userId) ===\n      false\n    ) {\n      alert('Username and email must be unique.');\n    } else {\n      const user: User = {\n        userId: this.userId,\n        username: this.username,\n        email: this.email,\n        creationDate: this.creationDate,\n        isActive: this.isActive,\n      };\n      this.userService.editUser(user, this.userId);\n      this.users = this.userService.getUsers();\n      this.handleCancelClick();\n    }\n  }\n\n  \n\n  handleEditClick($event: number): void {\n    this.editMode = true;\n    this.userId = $event;\n  }\n\n  handleCancelClick(): void {\n    this.editMode = false;\n    this.username = '';\n    this.email = '';\n    this.creationDate = '';\n    this.userId = 0;\n  }\n\n  \n  ngOnInit() {\n    this.pageChanged(this.currentPage);\n  }\n\n  pageChanged(page: number): void {\n    const startIndex = (page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    this.pagedData = this.users.slice(startIndex, endIndex);\n    this.currentPage = page;\n    if (this.pagedData.length === 0 && this.currentPage > 1) {\n      this.previousPage();\n    }\n  }\n\n  previousPage(): void {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.pageChanged(this.currentPage);\n    }\n  }\n\n  nextPage(): void {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n      this.pageChanged(this.currentPage);\n    }\n  }\n\n  get totalPages(): number {\n    return Math.ceil(this.users.length / this.itemsPerPage);\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../button/button.component\";\nexport class UserAddComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    //Form icerisinde kullanilmak uzere yeni bir use objesi olusturuldu\n    this.user = {\n      userId: 0,\n      username: '',\n      email: '',\n      creationDate: '',\n      isActive: false\n    };\n    if (this.userService.getUsers().length === 0) this.userService.setUsers();\n  }\n  /* userService componentinden veri once setUsers fonksiyonu kullanarak verileri cekiyoruz, daha sonra getUsers kullanarak userCount fonsksiyonu ile son userId yi bularak yeni userId numarasi olusturuyoruz */\n  handleAddClick() {\n    this.user.userId = this.userService.getUsers()[this.userService.userCount() - 1].userId + 1;\n    if (this.user.username === '' || this.user.email === '' || this.user.creationDate === '') alert('Please fill in the empty sections.');else if (this.userService.checkUnique(this.user.username, this.user.email, this.user.userId) === false) {\n      alert('This user already exists.');\n    } else {\n      this.userService.addUser(this.user);\n      this.router.navigateByUrl('/userlist');\n    }\n  }\n  handleCancelClick() {\n    this.router.navigateByUrl('/userlist');\n  }\n}\nUserAddComponent.ɵfac = function UserAddComponent_Factory(t) {\n  return new (t || UserAddComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n};\nUserAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserAddComponent,\n  selectors: [[\"app-user-add\"]],\n  decls: 21,\n  vars: 8,\n  consts: [[1, \"user-add\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"creationDate\"], [\"type\", \"date\", \"name\", \"creationDate\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"isActive\"], [\"name\", \"isActive\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [3, \"buttonText\", \"onButtonClick\"]],\n  template: function UserAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.user.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Creation Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.user.creationDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Activation State\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_select_ngModelChange_12_listener($event) {\n        return ctx.user.isActive = $event;\n      });\n      i0.ɵɵelementStart(13, \"option\", 9);\n      i0.ɵɵtext(14, \"Active\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 9);\n      i0.ɵɵtext(16, \"Inactive\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"div\")(19, \"app-button\", 10);\n      i0.ɵɵlistener(\"onButtonClick\", function UserAddComponent_Template_app_button_onButtonClick_19_listener() {\n        return ctx.handleSaveClick();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"app-button\", 10);\n      i0.ɵɵlistener(\"onButtonClick\", function UserAddComponent_Template_app_button_onButtonClick_20_listener() {\n        return ctx.handleCancelClick();\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.creationDate);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.isActive);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", false);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"buttonText\", \"Add\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"buttonText\", \"Cancel\");\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.ButtonComponent],\n  styles: [\".user-add[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: flex-start;\\n    flex-direction: column;\\n    gap: 10px;\\n    margin:10px 40px;\\n    padding: 10px;\\n    width: 50%;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci91c2VyLWFkZC91c2VyLWFkZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLDJCQUEyQjtJQUMzQixzQkFBc0I7SUFDdEIsU0FBUztJQUNULGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsVUFBVTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItYWRke1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBnYXA6IDEwcHg7XHJcbiAgICBtYXJnaW46MTBweCA0MHB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHdpZHRoOiA1MCU7XHJcbn1cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["UserAddComponent","constructor","userService","router","user","userId","username","email","creationDate","isActive","getUsers","length","setUsers","handleAddClick","userCount","alert","checkUnique","addUser","navigateByUrl","handleCancelClick","i0","ɵɵdirectiveInject","i1","UserService","i2","Router","selectors","decls","vars","consts","template","UserAddComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserAddComponent_Template_input_ngModelChange_3_listener","$event","UserAddComponent_Template_input_ngModelChange_6_listener","UserAddComponent_Template_input_ngModelChange_9_listener","UserAddComponent_Template_select_ngModelChange_12_listener","ɵɵelement","UserAddComponent_Template_app_button_onButtonClick_19_listener","handleSaveClick","UserAddComponent_Template_app_button_onButtonClick_20_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\user\\user-add\\user-add.component.ts","C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\user\\user-add\\user-add.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from '../user';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.css'],\n})\nexport class UserAddComponent {\n  //Form icerisinde kullanilmak uzere yeni bir use objesi olusturuldu\n\n  user: User = {\n    userId: 0,\n    username: '',\n    email: '',\n    creationDate: '',\n    isActive: false,\n  };\n\n  constructor(private userService: UserService, private router: Router) {\n    if (this.userService.getUsers().length === 0) this.userService.setUsers();\n  }\n\n  /* userService componentinden veri once setUsers fonksiyonu kullanarak verileri cekiyoruz, daha sonra getUsers kullanarak userCount fonsksiyonu ile son userId yi bularak yeni userId numarasi olusturuyoruz */\n  handleAddClick() {\n    this.user.userId =\n      this.userService.getUsers()[this.userService.userCount() - 1].userId + 1;\n    if (\n      this.user.username === '' ||\n      this.user.email === '' ||\n      this.user.creationDate === ''\n    )\n      alert('Please fill in the empty sections.');\n    else if (\n      this.userService.checkUnique(\n        this.user.username,\n        this.user.email,\n        this.user.userId\n      ) === false\n    ) {\n      alert('This user already exists.');\n    } else {\n      this.userService.addUser(this.user);\n      this.router.navigateByUrl('/userlist');\n    }\n  }\n\n  handleCancelClick() {\n    this.router.navigateByUrl('/userlist');\n  }\n}\n","<form class=\"user-add\">\n    <label for=\"username\">Username</label>\n<input type=\"text\" [(ngModel)]=\"user.username\" name=\"username\">\n<label for=\"email\">Email</label>\n<input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\">\n<label for=\"creationDate\">Creation Date</label>\n<input type=\"date\" [(ngModel)]=\"user.creationDate\" name=\"creationDate\">\n<label for=\"isActive\">Activation State</label>\n<select [(ngModel)]=\"user.isActive\" name=\"isActive\" >\n    <option [value]=\"true\">Active</option>\n    <option [value]=\"false\">Inactive</option>\n</select> <br>\n<div>\n    <app-button\n          [buttonText]=\"'Add'\"\n          (onButtonClick)=\"handleSaveClick()\"\n        ></app-button>\n        <app-button\n          [buttonText]=\"'Cancel'\"\n          (onButtonClick)=\"handleCancelClick()\"\n        ></app-button>\n</div>\n\n\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
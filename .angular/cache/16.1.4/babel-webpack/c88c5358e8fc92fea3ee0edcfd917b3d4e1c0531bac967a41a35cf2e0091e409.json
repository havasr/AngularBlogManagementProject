{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CommentListComponent = class CommentListComponent {\n  constructor(commentService, router) {\n    this.commentService = commentService;\n    this.router = router;\n    this.comments = [];\n    this.pagedData = [];\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    if (this.commentService.getComments().length === 0) this.commentService.setComments();\n    this.comments = this.commentService.getComments();\n  }\n  handleDetailClick($event) {\n    this.router.navigate(['/commentlist/', $event]);\n  }\n  handleDeleteClick($event) {\n    this.commentService.deleteComment($event);\n    this.comments = this.commentService.getComments();\n    this.pageChanged(this.currentPage);\n  }\n  ngOnInit() {\n    this.pageChanged(this.currentPage);\n  }\n  pageChanged(page) {\n    const startIndex = (page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    this.pagedData = this.comments.slice(startIndex, endIndex);\n    this.currentPage = page;\n    if (this.pagedData.length === 0 && this.currentPage > 1) {\n      this.previousPage();\n    }\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.pageChanged(this.currentPage);\n    }\n  }\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n      this.pageChanged(this.currentPage);\n    }\n  }\n  get totalPages() {\n    return Math.ceil(this.comments.length / this.itemsPerPage);\n  }\n};\nCommentListComponent = __decorate([Component({\n  selector: 'app-comment-list',\n  templateUrl: './comment-list.component.html',\n  styleUrls: ['./comment-list.component.css']\n})], CommentListComponent);","map":{"version":3,"names":["Component","CommentListComponent","constructor","commentService","router","comments","pagedData","currentPage","itemsPerPage","getComments","length","setComments","handleDetailClick","$event","navigate","handleDeleteClick","deleteComment","pageChanged","ngOnInit","page","startIndex","endIndex","slice","previousPage","nextPage","totalPages","Math","ceil","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\comments\\comment-list\\comment-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Comment } from '../comment';\nimport { CommentService } from '../comment.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-comment-list',\n  templateUrl: './comment-list.component.html',\n  styleUrls: ['./comment-list.component.css'],\n})\nexport class CommentListComponent {\n  comments: Comment[] = [];\n  pagedData: Comment[] = [];\n  currentPage = 1;\n  itemsPerPage = 10;\n\n  constructor(private commentService: CommentService, private router: Router) {\n    if (this.commentService.getComments().length === 0)\n      this.commentService.setComments();\n    this.comments = this.commentService.getComments();\n  }\n\n  handleDetailClick($event: number) {\n    this.router.navigate(['/commentlist/', $event]);\n  }\n\n  handleDeleteClick($event: number) {\n    this.commentService.deleteComment($event);\n    this.comments = this.commentService.getComments();\n    this.pageChanged(this.currentPage);\n  }\n\n  ngOnInit() {\n    this.pageChanged(this.currentPage);\n  }\n\n  pageChanged(page: number): void {\n    const startIndex = (page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    this.pagedData = this.comments.slice(startIndex, endIndex);\n    this.currentPage = page;\n    if (this.pagedData.length === 0 && this.currentPage > 1) {\n      this.previousPage();\n    }\n  }\n\n  previousPage(): void {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.pageChanged(this.currentPage);\n    }\n  }\n\n  nextPage(): void {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n      this.pageChanged(this.currentPage);\n    }\n  }\n\n  get totalPages(): number {\n    return Math.ceil(this.comments.length / this.itemsPerPage);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAM/BC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IALlE,KAAAC,QAAQ,GAAc,EAAE;IACxB,KAAAC,SAAS,GAAc,EAAE;IACzB,KAAAC,WAAW,GAAG,CAAC;IACf,KAAAC,YAAY,GAAG,EAAE;IAGf,IAAI,IAAI,CAACL,cAAc,CAACM,WAAW,EAAE,CAACC,MAAM,KAAK,CAAC,EAChD,IAAI,CAACP,cAAc,CAACQ,WAAW,EAAE;IACnC,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACF,cAAc,CAACM,WAAW,EAAE;EACnD;EAEAG,iBAAiBA,CAACC,MAAc;IAC9B,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,eAAe,EAAED,MAAM,CAAC,CAAC;EACjD;EAEAE,iBAAiBA,CAACF,MAAc;IAC9B,IAAI,CAACV,cAAc,CAACa,aAAa,CAACH,MAAM,CAAC;IACzC,IAAI,CAACR,QAAQ,GAAG,IAAI,CAACF,cAAc,CAACM,WAAW,EAAE;IACjD,IAAI,CAACQ,WAAW,CAAC,IAAI,CAACV,WAAW,CAAC;EACpC;EAEAW,QAAQA,CAAA;IACN,IAAI,CAACD,WAAW,CAAC,IAAI,CAACV,WAAW,CAAC;EACpC;EAEAU,WAAWA,CAACE,IAAY;IACtB,MAAMC,UAAU,GAAG,CAACD,IAAI,GAAG,CAAC,IAAI,IAAI,CAACX,YAAY;IACjD,MAAMa,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAACZ,YAAY;IAC/C,IAAI,CAACF,SAAS,GAAG,IAAI,CAACD,QAAQ,CAACiB,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;IAC1D,IAAI,CAACd,WAAW,GAAGY,IAAI;IACvB,IAAI,IAAI,CAACb,SAAS,CAACI,MAAM,KAAK,CAAC,IAAI,IAAI,CAACH,WAAW,GAAG,CAAC,EAAE;MACvD,IAAI,CAACgB,YAAY,EAAE;;EAEvB;EAEAA,YAAYA,CAAA;IACV,IAAI,IAAI,CAAChB,WAAW,GAAG,CAAC,EAAE;MACxB,IAAI,CAACA,WAAW,EAAE;MAClB,IAAI,CAACU,WAAW,CAAC,IAAI,CAACV,WAAW,CAAC;;EAEtC;EAEAiB,QAAQA,CAAA;IACN,IAAI,IAAI,CAACjB,WAAW,GAAG,IAAI,CAACkB,UAAU,EAAE;MACtC,IAAI,CAAClB,WAAW,EAAE;MAClB,IAAI,CAACU,WAAW,CAAC,IAAI,CAACV,WAAW,CAAC;;EAEtC;EAEA,IAAIkB,UAAUA,CAAA;IACZ,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACtB,QAAQ,CAACK,MAAM,GAAG,IAAI,CAACF,YAAY,CAAC;EAC5D;CACD;AArDYP,oBAAoB,GAAA2B,UAAA,EALhC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW9B,oBAAoB,CAqDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
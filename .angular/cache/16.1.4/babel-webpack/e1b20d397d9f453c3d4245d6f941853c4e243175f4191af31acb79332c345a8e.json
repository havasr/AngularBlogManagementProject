{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../comment.service\";\nimport * as i2 from \"@angular/router\";\nexport class CommentDetailComponent {\n  constructor(commentService, activatedRoute) {\n    this.commentService = commentService;\n    this.activatedRoute = activatedRoute;\n    this.comments = [];\n    this.comment = {\n      commentId: 0,\n      postId: 0,\n      userId: 0,\n      comment: \"\",\n      creationDate: \"\",\n      isConfirmed: false\n    };\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.comments = this.commentService.getComments();\n      const id = params['id'];\n      this.comment = this.comments.find(comment => comment.commentId === Number(id));\n    });\n  }\n}\nCommentDetailComponent.ɵfac = function CommentDetailComponent_Factory(t) {\n  return new (t || CommentDetailComponent)(i0.ɵɵdirectiveInject(i1.CommentService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nCommentDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CommentDetailComponent,\n  selectors: [[\"app-comment-detail\"]],\n  decls: 27,\n  vars: 6,\n  consts: [[1, \"category-detail-component\"], [1, \"comment-card\"], [1, \"comment-detail\"], [1, \"header\"], [1, \"content\"], [1, \"footer\"], [\"type\", \"button\", \"routerLink\", \"/commentlist\"]],\n  template: function CommentDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"p\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"h2\");\n      i0.ɵɵtext(12, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"div\")(17, \"h2\");\n      i0.ɵɵtext(18, \"Creation Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"p\");\n      i0.ɵɵtext(20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"h2\");\n      i0.ɵɵtext(22, \"Confirmation State\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"p\");\n      i0.ɵɵtext(24);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(25, \"button\", 6);\n      i0.ɵɵtext(26, \"Return Comment List\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"Comment Id: \", ctx.comment.commentId, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Post Id: \", ctx.comment.postId, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"User Id: \", ctx.comment.userId, \"\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.comment.comment);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.comment.creationDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.comment.isConfirmed);\n    }\n  },\n  dependencies: [i2.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CommentDetailComponent","constructor","commentService","activatedRoute","comments","comment","commentId","postId","userId","creationDate","isConfirmed","ngOnInit","params","subscribe","getComments","id","find","Number","i0","ɵɵdirectiveInject","i1","CommentService","i2","ActivatedRoute","selectors","decls","vars","consts","template","CommentDetailComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate"],"sources":["C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\comments\\comment-detail\\comment-detail.component.ts","C:\\Users\\PC\\Allianz-ANGULAR\\patika-ng\\src\\app\\comments\\comment-detail\\comment-detail.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Comment } from '../comment';\nimport { CommentService } from '../comment.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-comment-detail',\n  templateUrl: './comment-detail.component.html',\n  styleUrls: ['./comment-detail.component.css']\n})\nexport class CommentDetailComponent {\n  comments: Comment[] = [];\n  comment: Comment = {\n    commentId: 0,\n    postId: 0,\n    userId: 0,\n    comment: \"\",\n    creationDate: \"\",\n    isConfirmed: false\n  };\n\n  constructor(private commentService: CommentService, private activatedRoute: ActivatedRoute){\n\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.comments = this.commentService.getComments();\n      const id = params['id'];\n      this.comment = this.comments.find(comment => comment.commentId === Number(id))!;\n    });\n  }\n\n}\n","<div class=\"category-detail-component\"></div>\n<div class=\"comment-card\">\n  <div class=\"comment-detail\">\n    <div class=\"header\">\n      <p>Comment Id: {{comment.commentId}}</p>\n      <p>Post Id: {{comment.postId}}</p>\n      <p>User Id: {{comment.userId}}</p>\n    </div>\n    <div class=\"content\">\n      <h2>Content</h2>\n      <p>{{comment.comment}}</p>\n    </div>\n    <div class=\"footer\">\n      <div>\n        <h2>Creation Date</h2>\n        <p>{{comment.creationDate}}</p>\n        <h2>Confirmation State</h2>\n        <p>{{comment.isConfirmed}}</p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<button type=\"button\" routerLink=\"/commentlist\">Return Comment List</button>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}